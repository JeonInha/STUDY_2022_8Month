저번주차: 에러처리, 쿠키
오늘자: 세션:: 쿠키를 웹브라우저가 아니라 서버에서 가지게 하는 것.

**문제 !!
브라우저 상에서 쿠키를 만들 수 있다 →그렇기 때문에 쿠키로 접근하는 건 보안 상 취약점이 있을 수 있다!! → 클라이언트가 기억하는 쿠키 말고 서버가 기억하도록 하자!!→ 세션 (session)

 

### 세션 (Session)

: 서버가 기억하는 것. 

클라이언트는 서버에 접속했다가 연결을 끊는다. 무수한 클라이언트의 접속 중 같은 클라이언트라는 것을 어떻게 판별할까???→ cookie로 같은 클라이언트인 것을 판별한다!!
특정한 쿠키 값이 있는지 없는 지를 판별하여 처음 접속하는 클라이언트인지 아닌지 판별하고, 처음 접속한 클라이언트에는 특정한 쿠키 값을 부여한다. 
서버는 그 쿠키 값을 판별하여 클라이언트를 특정하게 된다.



............. 어노테이션






<!-- 
   Session의 유효 범위는?
   
   jsessionid?
   서블릿 컨테이너(tomcat)에 접속한 사용자를 구분하기 위해 부여한 값

   HttpSession 객체에 접근하기 위한 방법은?

   기존 Session이 '더 이상 유효하지 않음'을 위해 호출해야하는 HttpSession 메소드는?

   쿠키(Cookie)와 세션(Session)을 관리하는 주체는?
   
   ---
   
   매핑되어 있는 주소에 HttpServlet의 요청 제어 전/후로  필터링 작업을 할 수 있는 객체는?
   
   doFilter 메소드는 어떤 기능?
   
   필터를 활용하면 좋은 점?
   
   ---
   
   Connection Pool이 뭔가요?
-->